// <auto-generated />
using System;
using DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBModels.Migrations
{
    [DbContext(typeof(DEPIContext))]
    [Migration("20240809140143_CreatedStudCourseTableMatchingRelationBetweenStudentAndCourse")]
    partial class CreatedStudCourseTableMatchingRelationBetweenStudentAndCourse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBModels.Course", b =>
                {
                    b.Property<int>("Crs_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Crs_Id"));

                    b.Property<int?>("Crs_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Crs_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Topic_Id")
                        .HasColumnType("int");

                    b.HasKey("Crs_Id");

                    b.HasIndex("Topic_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("DBModels.Department", b =>
                {
                    b.Property<int>("Dept_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dept_Id"));

                    b.Property<string>("Dept_Desc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Dept_Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Dept_Manager")
                        .HasColumnType("int");

                    b.Property<string>("Dept_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Manager_HireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Dept_Id");

                    b.HasIndex("Dept_Manager");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DBModels.InstCourse", b =>
                {
                    b.Property<int>("Ins_Id")
                        .HasColumnType("int");

                    b.Property<int>("Crs_Id")
                        .HasColumnType("int");

                    b.Property<string>("Evaluation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Ins_Id", "Crs_Id");

                    b.HasIndex("Crs_Id");

                    b.ToTable("InstCourses");
                });

            modelBuilder.Entity("DBModels.Instructor", b =>
                {
                    b.Property<int>("Ins_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ins_Id"));

                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Ins_Degree")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ins_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Ins_Id");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("DBModels.StudCourse", b =>
                {
                    b.Property<int>("Stud_Id")
                        .HasColumnType("int");

                    b.Property<int>("Crs_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.HasKey("Stud_Id", "Crs_Id");

                    b.HasIndex("Crs_Id");

                    b.ToTable("StudCourses");
                });

            modelBuilder.Entity("DBModels.Student", b =>
                {
                    b.Property<int>("St_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("St_Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sname")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("St_super")
                        .HasColumnType("int");

                    b.HasKey("St_Id");

                    b.HasIndex("Dept_Id");

                    b.HasIndex("St_super");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DBModels.Topic", b =>
                {
                    b.Property<int>("Top_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Top_Id"));

                    b.Property<string>("Topic_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Top_Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("DBModels.Course", b =>
                {
                    b.HasOne("DBModels.Topic", "Crs_Topic")
                        .WithMany("Top_Courses")
                        .HasForeignKey("Topic_Id");

                    b.Navigation("Crs_Topic");
                });

            modelBuilder.Entity("DBModels.Department", b =>
                {
                    b.HasOne("DBModels.Instructor", "Manager")
                        .WithMany("ManagedDepts")
                        .HasForeignKey("Dept_Manager");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DBModels.InstCourse", b =>
                {
                    b.HasOne("DBModels.Course", "Crs")
                        .WithMany("CrsInstructors")
                        .HasForeignKey("Crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBModels.Instructor", "Inst")
                        .WithMany("InstCourses")
                        .HasForeignKey("Ins_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crs");

                    b.Navigation("Inst");
                });

            modelBuilder.Entity("DBModels.Instructor", b =>
                {
                    b.HasOne("DBModels.Department", "InsDept")
                        .WithMany("DeptInstructors")
                        .HasForeignKey("Dept_Id");

                    b.Navigation("InsDept");
                });

            modelBuilder.Entity("DBModels.StudCourse", b =>
                {
                    b.HasOne("DBModels.Course", "Crs")
                        .WithMany("CrsStudents")
                        .HasForeignKey("Crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBModels.Student", "Stud")
                        .WithMany("StudentCourses")
                        .HasForeignKey("Stud_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crs");

                    b.Navigation("Stud");
                });

            modelBuilder.Entity("DBModels.Student", b =>
                {
                    b.HasOne("DBModels.Department", "StDept")
                        .WithMany("DeptStudents")
                        .HasForeignKey("Dept_Id");

                    b.HasOne("DBModels.Student", "SuperVisor")
                        .WithMany("SuperVisedSts")
                        .HasForeignKey("St_super");

                    b.Navigation("StDept");

                    b.Navigation("SuperVisor");
                });

            modelBuilder.Entity("DBModels.Course", b =>
                {
                    b.Navigation("CrsInstructors");

                    b.Navigation("CrsStudents");
                });

            modelBuilder.Entity("DBModels.Department", b =>
                {
                    b.Navigation("DeptInstructors");

                    b.Navigation("DeptStudents");
                });

            modelBuilder.Entity("DBModels.Instructor", b =>
                {
                    b.Navigation("InstCourses");

                    b.Navigation("ManagedDepts");
                });

            modelBuilder.Entity("DBModels.Student", b =>
                {
                    b.Navigation("StudentCourses");

                    b.Navigation("SuperVisedSts");
                });

            modelBuilder.Entity("DBModels.Topic", b =>
                {
                    b.Navigation("Top_Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
