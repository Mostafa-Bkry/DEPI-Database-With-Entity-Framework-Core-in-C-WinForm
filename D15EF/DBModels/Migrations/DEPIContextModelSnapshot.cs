// <auto-generated />
using System;
using DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBModels.Migrations
{
    [DbContext(typeof(DEPIContext))]
    partial class DEPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBModels.Department", b =>
                {
                    b.Property<int>("Dept_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dept_Id"));

                    b.Property<string>("Dept_Desc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Dept_Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Manager_HireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Dept_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DBModels.Instructor", b =>
                {
                    b.Property<int>("Ins_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ins_Id"));

                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Ins_Degree")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ins_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Ins_Id");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("DBModels.Student", b =>
                {
                    b.Property<int>("St_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("St_Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sname")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("St_super")
                        .HasColumnType("int");

                    b.HasKey("St_Id");

                    b.HasIndex("Dept_Id");

                    b.HasIndex("St_super");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DBModels.Instructor", b =>
                {
                    b.HasOne("DBModels.Department", "InsDept")
                        .WithMany("DeptInstructors")
                        .HasForeignKey("Dept_Id");

                    b.Navigation("InsDept");
                });

            modelBuilder.Entity("DBModels.Student", b =>
                {
                    b.HasOne("DBModels.Department", "StDept")
                        .WithMany("DeptStudents")
                        .HasForeignKey("Dept_Id");

                    b.HasOne("DBModels.Student", "SuperVisor")
                        .WithMany("SuperVisedSts")
                        .HasForeignKey("St_super");

                    b.Navigation("StDept");

                    b.Navigation("SuperVisor");
                });

            modelBuilder.Entity("DBModels.Department", b =>
                {
                    b.Navigation("DeptInstructors");

                    b.Navigation("DeptStudents");
                });

            modelBuilder.Entity("DBModels.Student", b =>
                {
                    b.Navigation("SuperVisedSts");
                });
#pragma warning restore 612, 618
        }
    }
}
